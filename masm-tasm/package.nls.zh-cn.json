{
	"editor.openEmu": "打开DOS环境",
	"editor.runAsm": "运行当前程序(汇编+链接+运行)",
	"editor.debugAsm": "调试当前程序(汇编+链接+调试)",
	"command.cleanalldianose": "MASM/TASM: 清除MASM/TASM的所有问题信息",
	"config.mode.singleFile": "针对所有代码存储在一个文件中的模式，插件会首先复制文件并对副本进行操作",
	"config.mode.workspace": "针对文件存在依赖的模式，插件会直接在当前工作文件夹中操作。\n\n- dosbox会直接在工作区文件夹挂载，jsdos会复制整个工作区所有文件\n- 注意DOS系统常常需要遵守8.3规则",
	"config.assembler.description": "选择使用的汇编工具",
	"config.emulator.description": "选择使用的DOS环境模拟器",
	"config.emulator.jsdos": "使用jsdos在webview中运行jsdos(wdosbox)来提供DOS环境",
	"config.emulator.dosbox": "使用dosbox模拟DOS系统环境，非windows系统需要先安装dosbox并添加到PATH",
	"config.emulator.dosboxX": "使用DOSBox-x模拟dos环境",
	"config.emulator.player": "尽量使用msdos player模拟，不会弹出一个窗口，但是可能无法得到程序预期的运行结果",
	"config.savefirst": "在运行之前先保存文件,不保存的话，无法体现当前变更",
	"config.boxrun.description": "选择在dosbox中运行代码时，运行代码结束后执行什么操作",
	"config.boxrun.enum1": "运行之后在dosbox窗口停留，可以输入exit，点击右上角“x”，或者按Ctrl+F9关闭DOSBOX",
	"config.boxrun.enum2": "运行程序之后直接关闭DOSBOX",
	"config.boxrun.enum3": "运行程序之后先停顿一下，输入任意字符后关闭DOSBOX窗口",
	"config.boxrun.choose": "使用choose命令，来选择是否关闭dosbox",
	"config.boxconfig.description": "dosbox的配置信息，将会写到插件专用的配置文件中, 参见 [dosbox官网的说明](https://www.dosbox.com/wiki/Dosbox.conf),请勿设置`autoexec`",
	"config.boxXconfig.description": "dosbox-x的配置信息，将会写到插件专用的配置文件中, 参见 [dosbox-x官网的说明](https://dosbox-x.com/wiki/),请勿设置`autoexec`",
	"config.hover": "是否显示悬浮提示(hover)，可能需要重启vscode来应用变更",
	"config.cpp-docs.links": "用于获取[cppdocs](https://github.com/MicrosoftDocs/cpp-docs)信息的链接, \"{vid}\"将被替换为`Visual Studio Code Language ID`,\"{mid}\" 将被替换为`MLCP language code`, 参见 [vscode-loc](https://github.com/microsoft/vscode-loc)",
	"config.PLF": "使用提供大纲，跳到定义，查找引用等programmatic features",
	"config.format.align.description": "以不同方式对齐代码",
	"config.format.align.enum.indent.label": "仅缩进",
	"config.format.align.enum.label.label": "对齐到标签",
	"config.format.align.enum.segment.label": "对齐到段",
	"config.format.align.enum.indent.md": "以固定的长度缩进代码\n\n```asm\nL1:\n    mov ax, 1\n    mov bx, 2\nLabel2:\n    mov cx, 3\n    mov dx, 4\n```",
	"config.format.align.enum.label.md": "代码对齐到其所在的标签\n\n```asm\nL1:\n    mov ax, 1\n    mov bx, 2\nLabel2:\n        mov cx, 3\n        mov dx, 4\n```",
	"config.format.align.enum.segment.md": "代码在段中对齐\n\n```asm\nL1:\n        mov ax, 1\n        mov bx, 2\nLabel2:\n        mov cx, 3\n        mov dx, 4\n```",
	"config.format.casing.description": "格式化标识符的大小写\n\n`lower` - 全部小写\n\n`upper` - 全部大写\n\n`title` - 首字母大写\n\n`off` - 不改变大小写",
	"config.format.casing.instruction": "指令, 例如`MOV` `JMP` `PUSH`",
	"config.format.casing.directive": "指令, 例如`INCLUDE` `END` `PROC`",
	"config.format.casing.register": "寄存器, 例如`AX` `SI` `CS`",
	"config.format.casing.operator": "运算符, 例如`HIGH` `LOW` `PTR`",
	"config.format.alignOperand.description": "是否对齐操作数",
	"config.format.alignTrailingComment.description": "是否对齐行末注释",
	"config.format.alignSingleLineComment.description": "是否对齐单行注释",
	"config.format.spaceAfterComma.description": "是否在逗号后添加空格",
	"config.format.spaceAfterComma.enum.always": "总是在逗号后保持一个空格",
	"config.format.spaceAfterComma.enum.never": "删除逗号后的空格",
	"config.format.spaceAfterComma.enum.off": "不改变逗号后的空格"
}